[{"C:\\Users\\user\\Desktop\\login_page\\src\\index.js":"1","C:\\Users\\user\\Desktop\\login_page\\src\\App.js":"2","C:\\Users\\user\\Desktop\\login_page\\src\\store\\auth-context.js":"3","C:\\Users\\user\\Desktop\\login_page\\src\\components\\Home\\Home.js":"4","C:\\Users\\user\\Desktop\\login_page\\src\\components\\Login\\Login.js":"5","C:\\Users\\user\\Desktop\\login_page\\src\\components\\MainHeader\\MainHeader.js":"6","C:\\Users\\user\\Desktop\\login_page\\src\\components\\UI\\Card\\Card.js":"7","C:\\Users\\user\\Desktop\\login_page\\src\\components\\UI\\Button\\Button.js":"8","C:\\Users\\user\\Desktop\\login_page\\src\\components\\MainHeader\\Navigation.js":"9"},{"size":296,"mtime":1636329431629,"results":"10","hashOfConfig":"11"},{"size":516,"mtime":1636329216236,"results":"12","hashOfConfig":"11"},{"size":1096,"mtime":1636329521297,"results":"13","hashOfConfig":"11"},{"size":453,"mtime":1636329299877,"results":"14","hashOfConfig":"11"},{"size":5212,"mtime":1636329054340,"results":"15","hashOfConfig":"11"},{"size":301,"mtime":1636326808319,"results":"16","hashOfConfig":"11"},{"size":218,"mtime":1616593928000,"results":"17","hashOfConfig":"11"},{"size":353,"mtime":1616593928000,"results":"18","hashOfConfig":"11"},{"size":682,"mtime":1636329339791,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8k9lw6",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\user\\Desktop\\login_page\\src\\index.js",[],"C:\\Users\\user\\Desktop\\login_page\\src\\App.js",[],"C:\\Users\\user\\Desktop\\login_page\\src\\store\\auth-context.js",[],"C:\\Users\\user\\Desktop\\login_page\\src\\components\\Home\\Home.js",[],["40","41"],"C:\\Users\\user\\Desktop\\login_page\\src\\components\\Login\\Login.js",["42"],"import React, { useState, useEffect, useReducer, useContext } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./Login.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport AuthContext from \"../../store/auth-context\";\r\n\r\n/* \r\nОбратите внимание, что я создал эту функцию-редюсера. \r\nвне функции компонента. И я сделал это, потому что внутри этой функции-редюсера \r\nнам не нужны данные который генерируется внутри функции компонента. \r\nТаким образом, эта функцию-редюсера может быть создана вне области видимости этой компонентной функции \r\nпотому что ему не нужно ни с чем взаимодействовать что определяется внутри функции компонента. \r\nВсе данные, которые потребуются и используется внутри функции-редюсера будет передано в эту функцию \r\nкогда он выполняется React'ом, автоматически.\r\n*/\r\nconst emailReducer = (prevState, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return {\r\n      value: action.val,\r\n      isValid: action.val.includes(\"@\"),\r\n    };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return {\r\n      value: prevState.value,\r\n      isValid: prevState.value.includes(\"@\"),\r\n    };\r\n  }\r\n  return {\r\n    value: \"\",\r\n    isValid: false,\r\n  };\r\n};\r\n\r\nconst passwordReducer = (prevState, action) => {\r\n  if (action.type === \"USER_INPUT\") {\r\n    return {\r\n      value: action.val,\r\n      isValid: action.val.trim().length > 6,\r\n    };\r\n  }\r\n  if (action.type === \"INPUT_BLUR\") {\r\n    return {\r\n      value: prevState.value,\r\n      isValid: prevState.value.trim().length > 6,\r\n    };\r\n  }\r\n  return {\r\n    value: \"\",\r\n    isValid: false,\r\n  };\r\n};\r\n\r\nconst Login = (props) => {\r\n  // const [enteredEmail, setEnteredEmail] = useState('');\r\n  // const [emailIsValid, setEmailIsValid] = useState();\r\n  // const [enteredPassword, setEnteredPassword] = useState('');\r\n  // const [passwordIsValid, setPasswordIsValid] = useState();\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\r\n    value: \"\",\r\n    isValid: false,\r\n  });\r\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n    value: \"\",\r\n    isValid: false,\r\n  });\r\n\r\n  const { isValid: emailIsValid } = emailState;\r\n  const { isValid: passwordIsValid } = passwordState;\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      console.log('EFFECT');\r\n      setFormIsValid(\r\n        emailState.isValid && passwordState.isValid\r\n      );\r\n    }, 500);\r\n\r\n    return () => {\r\n      console.log('clean up');\r\n      clearTimeout(timer);\r\n    }\r\n\r\n  }, [emailIsValid, passwordIsValid]);\r\n\r\n  const emailChangeHandler = (event) => {\r\n    // setEnteredEmail(event.target.value);\r\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\r\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    // setEnteredPassword(event.target.value);\r\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value })\r\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    // setEmailIsValid(emailState.isValid);\r\n    dispatchEmail({ type: \"INPUT_BLUR\" });\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\r\n    dispatchPassword({ type: \"INPUT_BLUR\" })\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    authCtx.onLogin(emailState.value, passwordState.value);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <div\r\n          className={`${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"\r\n            }`}\r\n        >\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={emailState.value}\r\n            onChange={emailChangeHandler}\r\n            onBlur={validateEmailHandler}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"\r\n            }`}\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={passwordState.value}\r\n            onChange={passwordChangeHandler}\r\n            onBlur={validatePasswordHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\user\\Desktop\\login_page\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\Users\\user\\Desktop\\login_page\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\user\\Desktop\\login_page\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\user\\Desktop\\login_page\\src\\components\\MainHeader\\Navigation.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":88,"column":6,"nodeType":"49","endLine":88,"endColumn":37,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailState.isValid' and 'passwordState.isValid'. Either include them or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]",{"range":"56","text":"57"},[2610,2641],"[emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]"]